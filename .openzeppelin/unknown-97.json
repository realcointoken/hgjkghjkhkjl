{
  "manifestVersion": "3.1",
  "impls": {
    "7fc295e32e45dd7f44aa4e174400f9eeab5483ab24da754621ac3fc740ae123d": {
      "address": "0x5928e350884bF6c5E0Ca3d068205CB569d1bd137",
      "txHash": "0x653cbb7f85c45e39657fe0979de4b06347b6f8d54c6a66b81ddf7b30f57308c7",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "ExchangeStorage.sol:11"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "ExchangeStorage.sol:15"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)4071_storage)dyn_storage)",
            "src": "ExchangeStorage.sol:17"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "ExchangeStorage.sol:19"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:26"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)7160",
            "src": "ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "ExchangeStorage.sol:30"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "ExchangeStorage.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "utils/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "utils/Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "utils/Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "utils/Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)2549_storage)",
            "src": "OrionVault.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Stake)2549_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Stake)2549_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)2542"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)2542": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)4071_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)4071_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)4071_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)7160": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "0309ebd123b42c2ee57c6f2f45a6833a8ce75bf66a02ae40174ac605c09b676c": {
      "address": "0x89a147A8aC2A1a1079DE3de2A5BCacBB565d88a4",
      "txHash": "0x4bd013e5f2761f9f693c4770cbda4d92a68c74fa6c1155cfc9bee70c3da68f39",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "ExchangeStorage.sol:11"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "ExchangeStorage.sol:15"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)4097_storage)dyn_storage)",
            "src": "ExchangeStorage.sol:17"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "ExchangeStorage.sol:19"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:26"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)7177",
            "src": "ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "ExchangeStorage.sol:30"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "ExchangeStorage.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "utils/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "utils/Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "utils/Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "utils/Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)2575_storage)",
            "src": "OrionVault.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Stake)2575_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Stake)2575_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)2568"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)2568": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)4097_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)4097_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)4097_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)7177": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "2d01f0a505f643d760ea6453c10bd35ac43f0f5d1158569ebd21cadc763d3461": {
      "address": "0x640dcc2FB275d811178291eb0676EFDe4dFFc75a",
      "txHash": "0x9deb9ed2f95775edd0fdcf5ebfbbd10cc94557e0e7eaf7cf2a659be0c5837d99",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "ExchangeStorage.sol:11"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "ExchangeStorage.sol:15"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)4139_storage)dyn_storage)",
            "src": "ExchangeStorage.sol:17"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "ExchangeStorage.sol:19"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:26"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)7355",
            "src": "ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "ExchangeStorage.sol:30"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "ExchangeStorage.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "utils/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "utils/Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "utils/Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "utils/Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)2567_storage)",
            "src": "OrionVault.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Stake)2567_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Stake)2567_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)2560"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)2560": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)4139_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)4139_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)4139_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)7355": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "0b4c566392ea68599a020848c90fc912c2fbab9df27bf81e355e8ca51730778f": {
      "address": "0x71aDcE9c2B957193dC538dAb4974e52f6c318149",
      "txHash": "0x78cd3d18541ebcb378ea8747cc1a6d7dc6b57bd2661c798ed7b6151c5b9cab9a",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "ExchangeStorage.sol:11"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "ExchangeStorage.sol:15"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)4140_storage)dyn_storage)",
            "src": "ExchangeStorage.sol:17"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "ExchangeStorage.sol:19"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:26"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)7356",
            "src": "ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "ExchangeStorage.sol:30"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "ExchangeStorage.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "utils/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "utils/Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "utils/Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "utils/Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)2567_storage)",
            "src": "OrionVault.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Stake)2567_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Stake)2567_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)2560"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)2560": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)4140_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)4140_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)4140_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)7356": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "0b660d8ee298dac821573be4d695df7e270444c8448f867434b01f11e24d357b": {
      "address": "0x7d0ad7F70CD7B94976b55EDa9C5324c1Cb0F78B9",
      "txHash": "0x22c8161da51294a699d165236b097877d75a47f70d536c3a159173326b35e6d2",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "ExchangeStorage.sol:11"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "ExchangeStorage.sol:15"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)4140_storage)dyn_storage)",
            "src": "ExchangeStorage.sol:17"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "ExchangeStorage.sol:19"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:26"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)7356",
            "src": "ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "ExchangeStorage.sol:30"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "ExchangeStorage.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "utils/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "utils/Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "utils/Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "utils/Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)2567_storage)",
            "src": "OrionVault.sol:19"
          }
        ],
        "types": {
          "t_mapping(t_address,t_struct(Stake)2567_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Stake)2567_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)2560"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)2560": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)4140_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)4140_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)4140_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)7356": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "57cc882e22eb8820a9aee9607ca9fd3282063d3aff674538904ceb360c9b30cf": {
      "address": "0xf60640145bfd75aB680F7c6CcfeA13547905aAb7",
      "txHash": "0xcda9f8563a0aa71f0953dd4b950a5e8a978d384001073bb82f381849a3e61853",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:16"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)4820_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:25"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:31"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:32"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)15868",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:35"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:37"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)3107_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\OrionVault.sol:19"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "_orionpoolRouter",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:14"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "orionpoolAllowances",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Stake)3107_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_struct(Stake)3107_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)3100"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)3100": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)4820_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)4820_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)4820_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)15868": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "8ad13d27e073dfddfae8f76586a8dac6ee93f2c7af605ce05ab77af9b51d45fa": {
      "address": "0x06CEF0387f9565491ea16c70a53cBa0e5f4D5490",
      "txHash": "0x858039e350b91b78ee381e4d3e1684498f8b4fb355404f15f674fdae545a5a6e",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:16"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)5241_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:25"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:31"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:32"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)16289",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:35"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:37"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)3528_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\OrionVault.sol:19"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "_orionpoolRouter",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:14"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "orionpoolAllowances",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Stake)3528_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_struct(Stake)3528_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)3521"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)3521": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)5241_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)5241_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)5241_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)16289": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "4e0da6114183dde2b66b20b497ae22e7ec6d51c89593229863c13365ccb30d3a": {
      "address": "0x07aE7cB10E2A62FcFd77431A662265694e9a829f",
      "txHash": "0xca11d58ae660da0a860f686642b9bd77c734e2d976bb73dd9185024479e9f0b8",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:16"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)5240_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:25"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:31"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:32"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)17218",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:35"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:37"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)3516_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\OrionVault.sol:19"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "_orionpoolRouter",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:14"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "orionpoolAllowances",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Stake)3516_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_struct(Stake)3516_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)3509"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)3509": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)5240_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)5240_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)5240_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)17218": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "122be4f338d3199bec20d10af93e5a763409cd0f70b83f2f5061e7e1a1632736": {
      "address": "0x5e79d54aB68B008FB78a37d03651a3dedC1e569c",
      "txHash": "0xdbf58268bca886bc594edcee6f37cf696b0ce7c60bb97af7ae056f2573b555d8",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:16"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)5219_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:25"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:31"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:32"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)17197",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:35"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:37"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)3495_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\OrionVault.sol:19"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "_orionpoolRouter",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:14"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "orionpoolAllowances",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Stake)3495_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_struct(Stake)3495_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)3488"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)3488": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)5219_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)5219_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)5219_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)17197": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "80f978fb39fcc73abe0e93555bf1c2f390c494ee1b174f9bbed08194e2ec5af4": {
      "address": "0xA09E806316B1aCF998cc03FBdD53B5A1A81Da76C",
      "txHash": "0x0a409bf1d65a219ac82190b8e47a3f9edff10802b712033ab4eb3dc067f7d4e4",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:16"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)5194_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:25"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:31"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:32"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)17172",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:35"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:37"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)3471_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\OrionVault.sol:19"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "_orionpoolRouter",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:14"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "orionpoolAllowances",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Stake)3471_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_struct(Stake)3471_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)3464"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)3464": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)5194_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)5194_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)5194_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)17172": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "45702038aee4c599b1f0ce288cdc2b89bc2c2a9f29bceb5c62394307274b5381": {
      "address": "0x8792128448C5dA458761068873077cfaeED0a27D",
      "txHash": "0xe67a7f4aed11a5c500699a3fbbfdcff4ab227a52b72341ca545a7d609b24e06e",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:16"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)5250_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:25"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:31"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:32"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)17476",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:35"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:37"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)3527_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\OrionVault.sol:19"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "_orionpoolRouter",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:14"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "orionpoolAllowances",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Stake)3527_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_struct(Stake)3527_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)3520"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)3520": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)5250_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)5250_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)5250_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)17476": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "8b1cb781b8f14186f32106e1990077842465c0df3805cda058335f80d8affb0b": {
      "address": "0x7E13115346d75125d91e9b474618cc203fcccf30",
      "txHash": "0x098ffc56507a83c5d0d1da6d276771cb91e86230ab43dbf45478f587fa00e8a3",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:16"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)5264_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:25"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:31"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:32"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)17490",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:35"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:37"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)3541_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\OrionVault.sol:19"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "_orionpoolRouter",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:14"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "orionpoolAllowances",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Stake)3541_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_struct(Stake)3541_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)3534"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)3534": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)5264_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)5264_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)5264_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)17490": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "156839dd4c9eb84d4607b7f374553145275885115eeceb259b2a74cdc68d2430": {
      "address": "0xba217183bD90390E1E42B0D4e7c81283ae3BF052",
      "txHash": "0xf9cda204232ab9d0c05a31087026cd511d3c9c990f48d8e9acd995cc93d83a18",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:16"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)5226_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:25"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:31"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:32"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)17452",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:35"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:37"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)3503_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\OrionVault.sol:19"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "_orionpoolRouter",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:14"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "orionpoolAllowances",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Stake)3503_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_struct(Stake)3503_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)3496"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)3496": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)5226_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)5226_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)5226_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)17452": {
            "label": "contract IERC20"
          }
        }
      }
    },
    "42f591a6b19a013d36258ef58a0230438c29089641a169f04f872d5b86f7056c": {
      "address": "0xB0Bc5284064e91C5Dd2B735507042fC102636B98",
      "txHash": "0x448957d4333c15a4c1791559f0a74b2c2cdb1179881eee8c1aa58f11a84cdc19",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:16"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)5264_storage)dyn_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:25"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:31"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:32"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)17522",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:35"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:37"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeStorage.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\utils\\Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)3541_storage)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\OrionVault.sol:19"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "_orionpoolRouter",
            "type": "t_address",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:14"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "orionpoolAllowances",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\..\\..\\..\\C\\work\\orion-13\\orion-exchange-private\\contracts\\ExchangeWithOrionPool.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Stake)3541_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_struct(Stake)3541_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)3534"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)3534": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)5264_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)5264_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)5264_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)17522": {
            "label": "contract IERC20"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xea831a9D898224E9dd6969277BC1321c2f7e7c4E",
    "txHash": "0x8647d2a5e9889e163ceabb4b90f80d134c76787baffbfe7d85d3e5d4e89f579e"
  }
}
