{
  "manifestVersion": "3.1",
  "impls": {
    "38f1b4a1ead4cdd3cd1f1a500a6fc1a657c9e67490cddb2ee7f15f61ab4eab12": {
      "address": "0x8f10dB1E9F15837D8153F95d358e8CFEd402F7b3",
      "txHash": "0x54f92a2c723fd2196dd8cdc6eb332d3f6bc25f0675f4cadbe76a8822768429f3",
      "layout": {
        "storage": [
          {
            "contract": "ExchangeStorage",
            "label": "filledAmounts",
            "type": "t_mapping(t_bytes32,t_uint192)",
            "src": "ExchangeStorage.sol:16"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetBalances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_int192))",
            "src": "ExchangeStorage.sol:20"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liabilities",
            "type": "t_mapping(t_address,t_array(t_struct(Liability)5290_storage)dyn_storage)",
            "src": "ExchangeStorage.sol:22"
          },
          {
            "contract": "ExchangeStorage",
            "label": "collateralAssets",
            "type": "t_array(t_address)dyn_storage",
            "src": "ExchangeStorage.sol:24"
          },
          {
            "contract": "ExchangeStorage",
            "label": "assetRisks",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ExchangeStorage.sol:25"
          },
          {
            "contract": "ExchangeStorage",
            "label": "stakeRisk",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:27"
          },
          {
            "contract": "ExchangeStorage",
            "label": "liquidationPremium",
            "type": "t_uint8",
            "src": "ExchangeStorage.sol:29"
          },
          {
            "contract": "ExchangeStorage",
            "label": "priceOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:31"
          },
          {
            "contract": "ExchangeStorage",
            "label": "positionOverdue",
            "type": "t_uint64",
            "src": "ExchangeStorage.sol:32"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_orionToken",
            "type": "t_contract(IERC20)17548",
            "src": "ExchangeStorage.sol:35"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_oracleAddress",
            "type": "t_address",
            "src": "ExchangeStorage.sol:37"
          },
          {
            "contract": "ExchangeStorage",
            "label": "_allowedMatcher",
            "type": "t_address",
            "src": "ExchangeStorage.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "initialized",
            "type": "t_bool",
            "src": "utils/Initializable.sol:26"
          },
          {
            "contract": "Initializable",
            "label": "initializing",
            "type": "t_bool",
            "src": "utils/Initializable.sol:31"
          },
          {
            "contract": "Initializable",
            "label": "______gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Initializable.sol:66"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "utils/Context.sol:41"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "utils/Ownable.sol:22"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "utils/Ownable.sol:82"
          },
          {
            "contract": "OrionVault",
            "label": "stakingData",
            "type": "t_mapping(t_address,t_struct(Stake)3567_storage)",
            "src": "OrionVault.sol:19"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "_orionpoolRouter",
            "type": "t_address",
            "src": "ExchangeWithOrionPool.sol:14"
          },
          {
            "contract": "ExchangeWithOrionPool",
            "label": "orionpoolAllowances",
            "type": "t_mapping(t_address,t_bool)",
            "src": "ExchangeWithOrionPool.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Stake)3567_storage)": {
            "label": "mapping(address => struct OrionVault.Stake)"
          },
          "t_struct(Stake)3567_storage": {
            "label": "struct OrionVault.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint64"
              },
              {
                "label": "phase",
                "type": "t_enum(StakePhase)3560"
              },
              {
                "label": "lastActionTimestamp",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_enum(StakePhase)3560": {
            "label": "enum OrionVault.StakePhase",
            "members": [
              "NOTSTAKED",
              "LOCKED",
              "RELEASING",
              "READYTORELEASE",
              "FROZEN"
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes32,t_uint192)": {
            "label": "mapping(bytes32 => uint192)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint192": {
            "label": "uint192"
          },
          "t_mapping(t_address,t_mapping(t_address,t_int192))": {
            "label": "mapping(address => mapping(address => int192))"
          },
          "t_mapping(t_address,t_int192)": {
            "label": "mapping(address => int192)"
          },
          "t_int192": {
            "label": "int192"
          },
          "t_mapping(t_address,t_array(t_struct(Liability)5290_storage)dyn_storage)": {
            "label": "mapping(address => struct MarginalFunctionality.Liability[])"
          },
          "t_array(t_struct(Liability)5290_storage)dyn_storage": {
            "label": "struct MarginalFunctionality.Liability[]"
          },
          "t_struct(Liability)5290_storage": {
            "label": "struct MarginalFunctionality.Liability",
            "members": [
              {
                "label": "asset",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint64"
              },
              {
                "label": "outstandingAmount",
                "type": "t_uint192"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(IERC20)17548": {
            "label": "contract IERC20"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xEE913f6F0016DB2929A0B2061A38F1461ef93477",
    "txHash": "0x7c015d92f75cffcf40882883a92804909e9877dfbe328625580520d19d2dbbf6"
  }
}
